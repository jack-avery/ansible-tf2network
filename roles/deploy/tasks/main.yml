---
- name: Perform setup
  ansible.builtin.include_tasks: setup.yml

- name: Announce update
  ignore_errors: true
  rcon:
    address: "{{ ansible_host }}"
    port: "{{ item.port }}"
    password: "{{ item.secrets.rcon_pass }}"
    command: 'sm_csay Server is restarting for updates.;sm_say Server is restarting for updates.'
  loop: "{{ targets.instances }}"
  loop_control:
    index_var: loop0
  delegate_to: localhost
  timeout: 10

- name: Template srcds.container.j2
  ansible.builtin.template:
    src: "srcds.container.j2"
    dest: "~/.config/containers/systemd/srcds-{{ network_shortname }}-{{ item.name }}.container"
    mode: 0755
  loop: "{{ targets.instances }}"

- name: Template ssh.container.j2
  ansible.builtin.template:
    src: "ssh.container.j2"
    dest: "~/.config/containers/systemd/ssh-{{ network_shortname }}.container"
    mode: 0755
  when: not targets.is_metrics

- name: Create Podman network
  containers.podman.podman_network:
    name: net-{{ network_shortname }}
    state: quadlet

- name: Install restart cronjob
  ansible.builtin.cron:
    name: "srcds-restart-{{ network_shortname }}"
    weekday: "*"
    minute: "0"
    hour: "{{ daily_restart_hour_utc }}"
    job: "podman compose -f /home/tf2server/podman-compose_{{ network_shortname }}.yml down && podman compose -f /home/tf2server/podman-compose_{{ network_shortname }}.yml up -d"

- name: Copy updater script
  copy:
    src: updater.sh
    dest: /home/tf2server/updater.sh
    mode: 0744

- name: Install autoupdate cronjob
  ansible.builtin.cron:
    name: "ansible-tf2network: autoupdater"
    weekday: "*"
    minute: "*/10"
    hour: "*"
    job: "/home/tf2server/updater.sh >> /home/tf2server/updater.log"
