---
- name: Perform setup
  ansible.builtin.include_tasks: setup.yml

- name: Announce update
  ignore_errors: true
  rcon:
    address: "{{ ansible_host }}"
    port: "{{ item.port }}"
    password: "{{ item.secrets.rcon_pass }}"
    command: 'sm_csay Server is restarting for updates.;sm_say Server is restarting for updates.'
  loop: "{{ targets.instances }}"
  loop_control:
    index_var: loop0
  delegate_to: localhost
  timeout: 10

- name: Create network for relay
  community.docker.docker_network:
    name: "network-srcds-{{ item.name }}"
  loop: "{{ targets.instances }}"

- name: Start
  community.docker.docker_container:
    name: "srcds-{{ item.name }}"
    image: "srcds-{{ item.name }}:latest"
    state: started
    restart: true
    restart_policy: "unless-stopped"
    cpuset_cpus: "{{ loop0 }}"
    networks:
      - name: "network-srcds-{{ item.name }}"
    ports:
      - "{{ item.port }}:{{ item.port }}"
      - "{{ item.port }}:{{ item.port }}/udp"
      - "{{ item.port + 5 }}:{{ item.port + 5 }}/udp"
  loop: "{{ targets.instances }}"
  loop_control:
    index_var: loop0

- name: Add servers to cron
  set_fact:
    cron: |
      docker restart {% for item in instances %}
      srcds-{{ item.name }} {% if 'relay_bot' in item %}
      srcdsr-{{ item.name }} {% endif %}{% endfor %}

- name: Install cronjob (6AM UTC)
  ansible.builtin.cron:
    name: "srcds-restart"
    weekday: "*"
    minute: "0"
    hour: "6"
    job: "{{ cron }}"
  when: ansible_distribution == 'Ubuntu'
