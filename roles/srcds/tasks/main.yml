---
- name: Perform setup
  ansible.builtin.include_tasks: setup.yml

- name: Delete old build data
  ansible.builtin.file:
    state: absent
    path: ~/build/{{ item.name }}
  loop: "{{ targets.instances }}"

- name: Create build directory
  ansible.builtin.file:
    path: ~/build/{{ item.name }}
    state: directory
    mode: 0755
  loop: "{{ targets.instances }}"

- name: Copy SourceMod to /tf
  ansible.posix.synchronize:
    src: /home/tf2server/build/sm/
    dest: /home/tf2server/build/{{ item.name }}/tf
    recursive: true
  loop: "{{ targets.instances }}"
  delegate_to: "{{ ansible_host }}"

- name: Move Dockerfile
  ansible.builtin.template:
    src: Dockerfile.j2
    dest: ~/build/{{ item.name }}/Dockerfile
    mode: 0755
  loop: "{{ targets.instances }}"

- name: Move pure_server_whitelist.txt
  ansible.builtin.template:
    src: pure_server_whitelist.txt.j2
    dest: ~/build/{{ item.name }}/tf/cfg/pure_server_whitelist.txt
    mode: 0755
  loop: "{{ targets.instances }}"

- name: Generate admins
  include_tasks: gen_admins.yml
  loop: "{{ targets.instances }}"

##
# Begin templates

- name: /run.sh
  ansible.builtin.template:
    src: run.sh.j2
    dest: ~/build/{{ item.name }}/run.sh
    mode: 0775
  loop: "{{ targets.instances }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/server.cfg
  ansible.builtin.template:
    src: server.cfg.j2
    dest: ~/build/{{ item.name }}/tf/cfg/server.cfg
    mode: 0755
  loop: "{{ targets.instances }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/mapcycle.txt
  ansible.builtin.template:
    src: mapcycle.txt.j2
    dest: ~/build/{{ item.name }}/tf/cfg/mapcycle.txt
    mode: 0755
  loop: "{{ targets.instances }}"

- name: /tf/cfg/motd_default.txt
  ansible.builtin.template:
    src: motd_default.txt.j2
    dest: ~/build/{{ item.name }}/tf/cfg/motd_default.txt
    mode: 0755
  loop: "{{ targets.instances }}"

- name: /tf/cfg/motd_text_default.txt
  ansible.builtin.template:
    src: motd_text_default.txt.j2
    dest: ~/build/{{ item.name }}/tf/cfg/motd_text_default.txt
    mode: 0755
  loop: "{{ targets.instances }}"

- name: /tf/addons/sourcemod/configs/databases.cfg
  ansible.builtin.template:
    src: databases.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/databases.cfg
    mode: 0755
  loop: "{{ targets.instances }}"

- name: /tf/addons/sourcemod/configs/custom-chatcolors.cfg
  ansible.builtin.template:
    src: custom-chatcolors.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/custom-chatcolors.cfg
    mode: 0755
  loop: "{{ targets.instances }}"

- name: /tf/addons/sourcemod/configs/discord.cfg
  ansible.builtin.template:
    src: discord.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/discord.cfg
    mode: 0755
  loop: "{{ targets.instances }}"

- name: /tf/addons/sourcemod/configs/sourcebans/sourcebans.cfg
  ansible.builtin.template:
    src: sourcebans.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/sourcebans/sourcebans.cfg
    mode: 0755
  loop: "{{ targets.instances }}"

- name: /tf/addons/sourcemod/configs/sourcebans/sourcesleuth_whitelist.cfg
  ansible.builtin.template:
    src: sourcesleuth_whitelist.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/sourcebans/sourcesleuth_whitelist.cfg
    mode: 0755
  loop: "{{ targets.instances }}"

- name: Make mapcfg directory
  ansible.builtin.file:
    dest: "~/build/{{ instance.name }}/tf/cfg/sourcemod/mapconfig"
    state: directory
    mode: 0755
  when: '"mapconfig" in mapcycles[instance.mapcycle|default("all")]'

# Map config

- name: Make general mapcfg directory
  ansible.builtin.file:
    dest: "~/build/{{ instance.name }}/tf/cfg/sourcemod/mapconfig/general"
    state: directory
    mode: 0755
  when: '"mapconfig" in mapcycles[instance.mapcycle|default("all")]'

- name: Make gametype mapcfg directory
  ansible.builtin.file:
    dest: "~/build/{{ instance.name }}/tf/cfg/sourcemod/mapconfig/gametype"
    state: directory
    mode: 0755
  when: '"mapconfig" in mapcycles[instance.mapcycle|default("all")]'

- name: Make maps mapcfg directory
  ansible.builtin.file:
    dest: "~/build/{{ instance.name }}/tf/cfg/sourcemod/mapconfig/maps"
    state: directory
    mode: 0755
  when: '"mapconfig" in mapcycles[instance.mapcycle|default("all")]'

- name: Template general config
  ansible.builtin.template:
    src: "cfg.j2"
    dest: "~/build/{{ instance.name }}/tf/cfg/sourcemod/mapconfig/general/{{ item }}.cfg"
    mode: 0755
  loop: "{{ mapcycles[instance.mapcycle|default("all")]["mapconfig"]["general"].keys() }}"
  when: '"mapconfig" in mapcycles[instance.mapcycle|default("all")] and "general" in mapcycles[instance.mapcycle|default("all")]["mapconfig"]'

- name: Template gametype mapcfg
  ansible.builtin.template:
    src: "cfg.j2"
    dest: "~/build/{{ instance.name }}/tf/cfg/sourcemod/mapconfig/gametype/{{ item }}.cfg"
    mode: 0755
  loop: "{{ mapcycles[instance.mapcycle|default("all")]["mapconfig"]["gametype"].keys() }}"
  when: '"mapconfig" in mapcycles[instance.mapcycle|default("all")] and "gametype" in mapcycles[instance.mapcycle|default("all")]["mapconfig"]'

- name: Template maps mapcfg
  ansible.builtin.template:
    src: "cfg.j2"
    dest: "~/build/{{ instance.name }}/tf/cfg/sourcemod/mapconfig/maps/{{ item }}.cfg"
    mode: 0755
  loop: "{{ mapcycles[instance.mapcycle|default("all")]["mapconfig"]["maps"].keys() }}"
  when: '"mapconfig" in mapcycles[instance.mapcycle|default("all")] and "maps" in mapcycles[instance.mapcycle|default("all")]["mapconfig"]'

- name: Do instance loops (plugin configs, custom maps, etc.)
  include_tasks: instance_loops.yml
  loop: "{{ targets.instances }}"
  loop_control:
    loop_var: instance

##
# End Templates

- name: Prune space before building
  community.docker.docker_prune:
    images: true
    containers: true

- name: Build images
  community.docker.docker_image:
    name: "srcds-{{ item.name }}"
    tag: "latest"
    source: build
    build:
      path: ~/build/{{ item.name }}
    state: present
    force_source: true
    force_tag: true
  loop: "{{ targets.instances }}"
