---
- name: Load secrets
  ansible.builtin.include_tasks: secrets.yml

- name: Delete old build data
  ansible.builtin.file:
    state: absent
    path: ~/build/{{ item.name }}
  loop: "{{ instances }}"

- name: Create build directory
  ansible.builtin.file:
    path: ~/build/{{ item.name }}
    state: directory
    mode: 0755
  loop: "{{ instances }}"

- name: Copy SourceMod to /tf
  ansible.posix.synchronize:
    src: /home/tf2server/build/sm/
    dest: /home/tf2server/build/{{ item.name }}/tf
    recursive: true
  loop: "{{ instances }}"
  delegate_to: "{{ ansible_host }}"

- name: Copy maps to /tf/maps
  ignore_errors: true # do not freak out if there's no custom maps
  ansible.posix.synchronize:
    src: "{{ role_path }}/files/maps/"
    dest: ~/build/{{ item.name }}/tf/maps
    recursive: true
  loop: "{{ instances }}"

- name: Move Dockerfile
  ansible.builtin.template:
    src: Dockerfile.j2
    dest: ~/build/{{ item.name }}/Dockerfile
    mode: 0755
  loop: "{{ instances }}"

- name: Move pure_server_whitelist.txt
  ansible.builtin.template:
    src: pure_server_whitelist.txt.j2
    dest: ~/build/{{ item.name }}/tf/cfg/pure_server_whitelist.txt
    mode: 0755
  loop: "{{ instances }}"

- name: Generate admins
  include_tasks: gen_admins.yml
  loop: "{{ instances_secrets }}"

# Copy enabled plugins to plugin directory
- include_tasks: plugins.yml
  loop: "{{ instances }}"
  loop_control:
    loop_var: instance

##
# Begin templates

- name: /run.sh
  ansible.builtin.template:
    src: run.sh.j2
    dest: ~/build/{{ item.0.name }}/run.sh
    mode: 0775
  loop: "{{ instances|zip(instances_secrets) }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/server.cfg
  ansible.builtin.template:
    src: server.cfg.j2
    dest: ~/build/{{ item.0.name }}/tf/cfg/server.cfg
    mode: 0755
  loop: "{{ instances|zip(instances_secrets) }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/mapcycle.txt
  ansible.builtin.template:
    src: mapcycle.txt.j2
    dest: ~/build/{{ item.name }}/tf/cfg/mapcycle.txt
    mode: 0755
  loop: "{{ instances }}"

- name: /tf/cfg/motd.txt
  ansible.builtin.template:
    src: motd.txt.j2
    dest: ~/build/{{ item.name }}/tf/cfg/motd.txt
    mode: 0755
  loop: "{{ instances }}"

- name: /tf/cfg/sourcemod/sourcemod.cfg
  ansible.builtin.template:
    src: sourcemod.cfg.j2
    dest: ~/build/{{ item.name }}/tf/cfg/sourcemod/sourcemod.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/sourcemod/mapchooser.cfg
  ansible.builtin.template:
    src: mapchooser.cfg.j2
    dest: ~/build/{{ item.name }}/tf/cfg/sourcemod/mapchooser.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/sourcemod/rinstagib.cfg
  ansible.builtin.template:
    src: rinstagib.cfg.j2
    dest: ~/build/{{ item.name }}/tf/cfg/sourcemod/rinstagib.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/sourcemod/Class_Restrictions_For_Humans.cfg
  ansible.builtin.template:
    src: Class_Restrictions_For_Humans.cfg.j2
    dest: ~/build/{{ item.name }}/tf/cfg/sourcemod/Class_Restrictions_For_Humans.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/sourcemod/AdvancedInfiniteAmmo.cfg
  ansible.builtin.template:
    src: AdvancedInfiniteAmmo.cfg.j2
    dest: ~/build/{{ item.name }}/tf/cfg/sourcemod/AdvancedInfiniteAmmo.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: /tf/cfg/sourcemod/soap_tf2dm.cfg
  ansible.builtin.template:
    src: soap_tf2dm.cfg.j2
    dest: ~/build/{{ item.name }}/tf/cfg/sourcemod/soap_tf2dm.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: /tf/addons/sourcemod/configs/databases.cfg
  ansible.builtin.template:
    src: databases.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/databases.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: /tf/addons/sourcemod/configs/discord.cfg
  ansible.builtin.template:
    src: discord.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/discord.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: /tf/addons/sourcemod/configs/sourcebans/sourcebans.cfg
  ansible.builtin.template:
    src: sourcebans.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/sourcebans/sourcebans.cfg
    mode: 0755
  loop: "{{ instances_secrets }}"
  loop_control:
    index_var: loop0

- name: /tf/addons/sourcemod/configs/sourcebans/sourcesleuth_whitelist.cfg
  ansible.builtin.template:
    src: sourcesleuth_whitelist.cfg.j2
    dest: ~/build/{{ item.name }}/tf/addons/sourcemod/configs/sourcebans/sourcesleuth_whitelist.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

- name: Make map-cfg directory
  ansible.builtin.file:
    path: ~/build/{{ item.name }}/tf/cfg/sourcemod/map-cfg
    state: directory
    mode: 0755
  loop: "{{ instances }}"

- name: /tf/cfg/sourcemod/map-cfg/arena_.cfg
  ansible.builtin.template:
    src: arena_.cfg.j2
    dest: ~/build/{{ item.name }}/tf/cfg/sourcemod/map-cfg/arena_.cfg
    mode: 0755
  loop: "{{ instances }}"
  loop_control:
    index_var: loop0

##
# End Templates

- name: Prune space before building
  community.docker.docker_prune:
    images: true
    containers: true

- name: Build images
  community.docker.docker_image:
    name: "srcds-{{ item.name }}"
    tag: "latest"
    source: build
    build:
      path: ~/build/{{ item.name }}
      pull: true
    state: present
    force_source: true
    force_tag: true
  loop: "{{ instances }}"
