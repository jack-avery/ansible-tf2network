---
- name: Deploy instances to hosts and generate cron
  hosts: tf2
  tasks:
    - name: Load secrets
      ansible.builtin.include_tasks: secrets.yml

    - name: Announce update
      ignore_errors: true
      rcon:
        address: "{{ ansible_host }}"
        port: "{{ srcds_base_port + (loop0 * srcds_reserve_ports) }}"
        password: "{{ item.rcon_pass }}"
        command: 'sm_csay Server is restarting for updates.;sm_say Server is restarting for updates.'
      loop: "{{ instances_secrets }}"
      loop_control:
        index_var: loop0
      delegate_to: localhost
      timeout: 10

    - name: Start
      community.docker.docker_container:
        name: "srcds-{{ item.name }}"
        image: "srcds-{{ item.name }}:latest"
        state: started
        restart: true
        restart_policy: "unless-stopped"
        cpuset_cpus: "{{ loop0 }}"
        ports:
          - "{{ srcds_base_port + (loop0 * srcds_reserve_ports) }}:{{ srcds_base_port + (loop0 * srcds_reserve_ports) }}"
          - "{{ srcds_base_port + (loop0 * srcds_reserve_ports) }}:{{ srcds_base_port + (loop0 * srcds_reserve_ports) }}/udp"
          - "{{ srcds_base_port + (loop0 * srcds_reserve_ports) + 5 }}:{{ srcds_base_port + (loop0 * srcds_reserve_ports) + 5 }}/udp"
      loop: "{{ instances }}"
      loop_control:
        index_var: loop0

    - name: Add servers to cron
      set_fact:
        cron: |
          docker restart {% for item in instances %}
          srcds-{{ item.name }} {% endfor %}

    - name: Install cronjob (6AM UTC)
      ansible.builtin.cron:
        name: "srcds-restart"
        weekday: "*"
        minute: "0"
        hour: "6"
        job: "{{ cron }}"
      when: ansible_distribution == 'Ubuntu'
